version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: product-explorer-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: product-explorer
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - product-explorer-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: product-explorer-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - product-explorer-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: product-explorer-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      MONGODB_URI: mongodb://admin:password@mongodb:27017/product-explorer?authSource=admin
      REDIS_URL: redis://redis:6379
      PORT: 3001
      NODE_ENV: production
      SCRAPE_DELAY: 2000
      MAX_CONCURRENT_SCRAPES: 3
      FRONTEND_URL: http://localhost:3000
      LOG_LEVEL: info
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - product-explorer-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: product-explorer-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      - backend
    networks:
      - product-explorer-network

volumes:
  mongodb_data:
  redis_data:

networks:
  product-explorer-network:
    driver: bridge